{"name":"Nip-igniter","tagline":"Crud Generator For Codeigniter Framework","body":"# Welcome to NipIgniter.\r\n\r\nHello, teman-teman programmer Codeigniter Framework.\r\n\r\nProject ini adalah project sederhana yang ditujukan bagi pengguna codeigniter framework yang ingin mencoba style berbeda dari style yang biasanya. Mungkin bisa dibilang style yang lebih 'modern'. :p\r\n\r\nDi NipIgniter terdapat fitur tambahan yang sedikit meniru framework-framework yang ada. Seperti Yii Framework, CakePHP, Laravel. Tapi hanya sedikit tambahan saja. Soalnya saya masih newbie :D. \r\nSalah satu fitur tambahannya adalah model ORM yang sekarang digunakan oleh banyak framework PHP. Contohnya saja, method first() untuk menyeleksi satu row dari database, all() untuk menyeleksi semua row di database dan lainnya. \r\n\r\nFitur penting yang ingin disajikan adalah generator CRUD. Kalau teman-teman pernah menggunakan Yii, pastinya fitur ini sudah familiar. Fitur ini men-generate table yang ada di database. Table tersebut dijadikan sebagai model, dan kemudian dari model yang terbentuk dibuatlah fungsi CRUD.\r\n\r\nOke langsung saja. Langkah-langkah menggunakan Fitur CRUD adalah sebagai berikut.\r\n\r\n## CRUD Generator\r\n\r\n#### 1). Pertama kali memasuki halaman utama, akan terlihat halaman berikut\r\n\r\nSebelumnya konfigurasikan dulu config database di\r\n\r\n```\r\napplication/config/database.php\r\n```\r\n\r\ndan config base_url di \r\n\r\n```\r\napplication/config/config.php\r\n```\r\n\r\n\r\n![Home Page NipIgniter Image](http://i44.tinypic.com/ei2vdy.jpg)\r\n\r\n\r\nHanya ada 2 inputan di form. Inputan pertama adalah nama tabel di database,\r\nnama tabel harus direkomendasikan menggunakan huruf kecil, jika lebih dari satu kata maka digabungkan menggunakan _ (underscore).\r\n\r\n```\r\nuser, jenis_kelamin, artikel, kategori_artikel\r\n```\r\n\r\n#### 2). Contoh Tabel yang akan di generate\r\n\r\n![Table For Example Image](http://i39.tinypic.com/25i7pmf.jpg)\r\n\r\nDisetiap table tambahkan 3 field berikut dengan type DateTime\r\n\r\n```\r\ncreated, updated, deleted\r\n```\r\n\r\n\r\n#### 3). Generate Table\r\n\r\nGenerate Tabel master terlebih dahulu, dalam contoh ini berarti generate terlebih dahulu tabel program_studi. Setelah itu generate tabel mahasiswa.\r\n\r\n\r\n#### 4). Konfigurasi CRUD\r\n\r\n![Program Studi Configuration Image](http://i43.tinypic.com/1zbxs9v.jpg)\r\n\r\n![Mahasiswa Configuration Image](http://i43.tinypic.com/2wqcpdx.jpg)\r\n\r\n![Configuration Image](http://i43.tinypic.com/bfi5pe.jpg)\r\n\r\nSetelah menekan tombol generate, maka akan muncul konfigurasi sederhana dari CRUD. Field Type adalah tipe dari inputan yang akan muncul pada saat menuju halaman add atau edit. Jika memilih tipe 'select' maka dibutuhkan Model yang akan menjadi acuan. Show on grid manjadi acuan apakah field tersebut akan ditampilkan di tabel grid atau tidak.\r\n\r\n\r\n#### 5). Finish\r\nSelesai, silahkan menuju alamat url /mahasiswa dan /program-studi. URL sesuai dengan nama controller, hurufnya kecil semua dipisahkan ama tanda (-) strip, tapi kata controller tidak disertakan.\r\nUntuk lebih jelasnya silahkan baca beberapa style perubahan yang ada di NipIgniter.\r\n\r\n\r\n----------------------------------------------------------------------------\r\n### Next\r\nSetelah mengetahui fitur CRUD, ada baiknya kita mengetahui juga beberapa perubahan style yang ada di NipIgniter.\r\n\r\n### 1. Controller dan View\r\n\r\n#### Penamaan\r\n\r\nPenamaan controller sedikit diketatkan di NipIgniter. Aturannya adalah penamaan controller menggunakan camel case. Huruf depan besar, jika lebih dari dua kata maka digabung tanpa menggunakan spasi, kata kedua dan seterusnya dimulai dengan huruf besar. Akhiran diberi kata Controller. Berikut adalah contoh penamaan controller, file, dan penulisan URLnya.\r\n\r\nNama controller\t: \r\n```\r\nUserController,ProgramStudiController,JenisKelaminController\r\n```\r\nNama File\t: \r\n```\r\nUserController.php, ProgramStudiController.php, JenisKelaminController.php\r\n```\r\nPenulisan URL\t: \r\n```\r\n/user, /program-studi, /jenis-kelamin\r\n```\r\n\r\nuntuk penulisan method pada controller sebagai berikut\r\n\r\nMethod :\r\n```\r\ngetUserByName()\r\nlistArtikel()\r\nkomentar()\r\n```\r\nURL :\r\n```\r\nget-user-by-name\r\nlist-artikel\r\nkomentar\r\n```\r\n\r\nParameter pada URL tidak ada perubahan, stylenya seperti biasa.\r\n\r\n\r\n#### Layout\r\n\r\nNipIgniter menggunakan templating sederhana. Menggunakan 2 buah view. View pertama dinamakan 'layout', kemudian view yang kedua dinamakan 'partial'. Ada 2 buah method yang menggantikan cara lama dalam menampilkan view.\r\n```\r\n$this->load->view('nama_view', $data);\r\n```\r\ndiganti :\r\n```\r\n$this->render('nama_view', $data);\r\n```\r\natau\r\n```\r\n$this->renderPartial('nama_view', $data);\r\n```\r\n\r\nMethod render() membutuhkan file yang akan menjadi induk dari file partial yang akan ditampilkan.\r\nLayout yang menjadi induk path-nya secara default mengacu pada file application/views/layout/main.php.\r\nDefinisi path layout dapat diubah berdasar variable $this->pageLayout = \"layout/main\".\r\n\r\nMethod renderPartial() langsung menampilkan view yang dituju. \r\nMethod ini fungsinya sama dengan $this->load->view().\r\n\r\nMudahnya gini sebagai contoh, view dengan nama 'edit_user' di masukkan ke dalam view dengan nama 'main' (sebagai layout). Bagi teman-teman yang pernah menggunakan framework lain seperti yii atau laravel, mungkin sudah familiar, karna memang konsepnya meniru mereka.\r\n\r\n#### View\r\n\r\nDi controller juga terdapat variable $this->view; yang isinya adalah string 'controller/method' sesuai dengan URL. Disini saya menghimbau agar penamaan view sesuai dengan controller dan method yang di akses.\r\n\r\nContohnya :\r\n```\r\nUserController dengan method index()\r\nAdminUtamaController dengan method kelolaUser()\r\n```\r\nview-nya adalah\r\n```\r\nuser/index.php\r\nadmin-utama/kelola-user.php\r\n```\r\n\r\nJika mengikuti style ini maka dengan mudah dapat dilakukan perenderan view dengan cara \r\n```\r\n$this->render($this->view);\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}